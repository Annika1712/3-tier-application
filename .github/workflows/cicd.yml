name: Build 3-tier-application

on:
  push:
    branches: [ "docker" ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    
    steps: 
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
      - name: Checkout Repository
        uses: actions/checkout@v4

      # https://github.com/marketplace/actions/docker-login#docker-hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Create and boot a builder using by default the docker-container driver. This is a recommended step by docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push frontend image to Docker hub
        uses: docker/build-push-action@v6
        with:
          context: ./docker/ui
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-frontend:latest
          build-args: |
            AWS_HOST_IP=${{vars.AWS_HOST_IP}}
      
      - name: Build and push backend image to Docker hub
        uses: docker/build-push-action@v6
        with:
          context: ./docker/api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-backend:latest
      
      - name: Build and push database image to Docker hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-database:latest
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup known host SSH
        uses: kielabokkie/ssh-key-and-known-hosts-action@v1.4.1
        with:
          # Private key required to access the host
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY}}
          # Hostname or IP to add to the known hosts file
          ssh-host: ${{ vars.AWS_HOST_IP }}
      
      - name: Install Docker             
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.AWS_HOST_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          script: |
            # Add Docker's official GPG key:
            sudo apt-get update
            sudo apt-get install ca-certificates curl
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc
            
            # Add the repository to Apt sources:
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

            # Install Docker
            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
          
      
      - name: Run Frontend             
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.AWS_HOST_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          script: |
            sudo docker network create basic3tier-network
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-database:latest
            sudo docker run -d --name=basic3tier --network basic3tier-network ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-database:latest

      - name: Run Backend           
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.AWS_HOST_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-backend:latest
            sudo docker run -d --name=basic3tier-backend -p 82:80 --network basic3tier-network ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-backend:latest       

      - name: Run Database             
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.AWS_HOST_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-frontend:latest
            sudo docker run -d --name=basic3tier-frontend -p 81:80 --network basic3tier-network ${{ secrets.DOCKERHUB_USERNAME }}/basic3tier-frontend:latest

      


